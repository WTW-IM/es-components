[
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/package.json",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/containers/drawer/DrawerItem.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/answer-group/AnswerGroup.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/ActionButton.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'ButtonVariantStyleType' is defined but never used.",
        "line": 8,
        "column": 3,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 8,
        "endColumn": 25
      }
    ],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useTheme } from '../../util/useTheme';\nimport Button, { propTypes as buttonPropTypes, ButtonProps } from './Button';\nimport type {\n  ButtonVariant,\n  ButtonVariantStyleType\n} from 'es-components-shared-types';\n\nconst StyledButton = styled(Button)<{\n  defaultStyle: ButtonVariant;\n  hoverStyle: ButtonVariant;\n}>`\n  background-color: ${props => props.defaultStyle.bgColor};\n  border-color: ${props => props.defaultStyle.bgColor};\n  color: ${props => props.theme.colors.black};\n\n  @media (hover: hover), (-ms-high-contrast: none) {\n    &:hover {\n      background-color: ${props => props.hoverStyle.bgColor};\n      border-color: ${props => props.hoverStyle.bgColor};\n    }\n  }\n`;\n\nconst ActionButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  function ActionButton(props, ref) {\n    const { children, styleType = 'default', ...other } = props;\n    const theme = useTheme();\n    const defaultStyle = theme.buttonStyles.button.variant.default;\n    const hoverStyle = theme.buttonStyles.button.variant[styleType];\n\n    return (\n      <StyledButton\n        ref={ref}\n        defaultStyle={defaultStyle}\n        hoverStyle={hoverStyle}\n        styleType={styleType}\n        type=\"button\"\n        {...other}\n      >\n        {children}\n      </StyledButton>\n    );\n  }\n);\n\nexport const propTypes = {\n  ...buttonPropTypes,\n  children: PropTypes.node.isRequired,\n  /** Select the color style of the button, types come from theme buttonStyles.button */\n  styleType: buttonPropTypes.styleType\n};\n\nActionButton.propTypes = propTypes;\n\nexport default ActionButton;\n",
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/Button.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/ButtonBase.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/DropdownButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/IconButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/LinkButton.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/OutlineButton.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 151,
        "column": 14,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 151,
        "endColumn": 31,
        "suggestions": [
          {
            "messageId": "suggestOptionalChain",
            "fix": { "range": [4098, 4099], "text": "?" },
            "desc": "Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator."
          }
        ],
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/PopoverLink.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/ToggleButton.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unsafe-argument",
        "severity": 2,
        "message": "Unsafe argument of type `any` assigned to a parameter of type `MouseEvent<HTMLButtonElement, MouseEvent>`.",
        "line": 33,
        "column": 26,
        "nodeType": "Identifier",
        "messageId": "unsafeArgument",
        "endLine": 33,
        "endColumn": 31
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button, { ButtonProps } from './Button';\nimport OutlineButton from './OutlineButton';\nimport { useMonitoringCallback } from '../../../hooks/useMonitoringHooks';\n\nexport type ToggleButtonProps = ButtonProps & {\n  isPressed?: boolean;\n  isOutline?: boolean;\n};\n\nconst ToggleButton = React.forwardRef<HTMLButtonElement, ToggleButtonProps>(\n  function ToggleButton(props, ref) {\n    const {\n      styleType,\n      size,\n      block,\n      isOutline = false,\n      onClick,\n      isPressed: isPressedProp = false,\n      ...buttonProps\n    } = props;\n    const [isPressed, setIsPressed] = useState(isPressedProp);\n\n    useEffect(() => {\n      setIsPressed(isPressedProp);\n    }, [isPressedProp]);\n\n    const toggleButton: React.MouseEventHandler<HTMLButtonElement> =\n      useMonitoringCallback((currentOnClick, event) => {\n        setIsPressed(oldIsPressed => !oldIsPressed);\n        currentOnClick?.(event);\n      }, onClick);\n\n    const ToggleButtonType = isOutline ? OutlineButton : Button;\n\n    return (\n      <ToggleButtonType\n        {...buttonProps}\n        onClick={toggleButton}\n        styleType={styleType}\n        size={size}\n        block={block}\n        className={\n          isPressed\n            ? `${buttonProps.className || ''} pressed`\n            : buttonProps.className\n        }\n        aria-pressed={isPressed}\n        ref={ref}\n      >\n        {props.children}\n      </ToggleButtonType>\n    );\n  }\n);\n\nToggleButton.propTypes = {\n  ...Button.propTypes,\n  isOutline: PropTypes.bool,\n  isPressed: PropTypes.bool\n};\n\nexport default ToggleButton;\n",
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/features/withLoadingStateWhileRunning.specs.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-misused-promises",
        "severity": 2,
        "message": "Promise-returning function provided to attribute where a void return was expected.",
        "line": 31,
        "column": 61,
        "nodeType": "JSXExpressionContainer",
        "messageId": "voidReturnAttribute",
        "endLine": 31,
        "endColumn": 70
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\nimport { screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\n\nimport Button from '../Button';\nimport { renderWithTheme } from '../../../util/test-utils';\nimport {\n  withLoadingStateWhileRunning,\n  LoadingStateOnClick,\n} from './withLoadingStateWhileRunning';\nimport noop from '../../../util/noop';\n\nconst LoaderButton = withLoadingStateWhileRunning(Button);\nlet resolve: () => void = noop;\nlet reject = noop;\n\nafterEach(() => {\n  resolve();\n});\n\nconst loadingContent = 'Loading...';\nconst defaultContent = 'Click Me!';\nconst load = () =>\n  new Promise<void>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\nconst generateLoaderButton = (onClick: LoadingStateOnClick = load) =>\n  renderWithTheme(\n    <LoaderButton showWhileRunning={loadingContent} onClick={onClick}>\n      {defaultContent}\n    </LoaderButton>\n  );\n\nit('renders a loading state while running', async () => {\n  const user = userEvent.setup();\n  generateLoaderButton();\n\n  await user.click(screen.getByText(defaultContent));\n\n  const loadingElement = await screen.findByText(loadingContent);\n  expect(loadingElement).toHaveAttribute('data-waiting');\n\n  resolve();\n\n  const completedElement = await screen.findByText(defaultContent);\n  expect(completedElement).not.toHaveAttribute('data-waiting');\n});\n\nit('renders the default state after rejection', async () => {\n  const user = userEvent.setup();\n  const rejectedLoad = () =>\n    new Promise((res, rej) => {\n      reject = rej;\n    }).then(noop, () => {\n      // we have appropriately rejected\n    });\n  generateLoaderButton(rejectedLoad);\n\n  await user.click(screen.getByText(defaultContent));\n\n  reject();\n\n  const completedElement = await screen.findByText(defaultContent);\n  expect(completedElement).not.toHaveAttribute('data-waiting');\n});\n",
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/buttons/features/withLoadingStateWhileRunning.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/radio-buttons/RadioGroup.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/controls/radio-buttons/RadioGroupContext.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/patterns/selectionDrawer/SelectionDrawer.specs.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "jest/no-export",
        "severity": 2,
        "message": "Do not export from a test file",
        "line": 39,
        "column": 1,
        "nodeType": "ExportNamedDeclaration",
        "messageId": "unexpectedExport",
        "endLine": 39,
        "endColumn": 80,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 128,
        "column": 19,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 224,
        "column": 30,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 224,
        "column": 30,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 224,
        "column": 48,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 224,
        "column": 48,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 225,
        "column": 13,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 225,
        "column": 13,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 225,
        "column": 28,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 225,
        "column": 28,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 227,
        "column": 43,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 227,
        "column": 43,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 242,
        "column": 43,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 242,
        "column": 43,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "jest/no-conditional-expect",
        "severity": 2,
        "message": "Avoid calling `expect` conditionally`",
        "line": 258,
        "column": 13,
        "nodeType": "CallExpression",
        "messageId": "conditionalExpect",
        "endLine": 260,
        "endColumn": 15,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 283,
        "column": 29,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 283,
        "endColumn": 53,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 283,
        "column": 36,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 308,
        "column": 29,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 308,
        "endColumn": 53,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 308,
        "column": 36,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 334,
        "column": 27,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 334,
        "column": 27,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 334,
        "column": 45,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 334,
        "column": 45,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 339,
        "column": 31,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 339,
        "endColumn": 38,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 368,
        "column": 27,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 368,
        "column": 27,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 368,
        "column": 45,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 368,
        "column": 45,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-non-null-assertion",
        "severity": 1,
        "message": "Forbidden non-null assertion.",
        "line": 373,
        "column": 31,
        "nodeType": "TSNonNullExpression",
        "messageId": "noNonNull",
        "endLine": 373,
        "endColumn": 38,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 376,
        "column": 30,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 376,
        "column": 30,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 376,
        "column": 48,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 376,
        "column": 48,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 377,
        "column": 13,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 377,
        "column": 13,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 377,
        "column": 28,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 377,
        "column": 28,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 378,
        "column": 33,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 378,
        "column": 33,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 395,
        "column": 23,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 395,
        "column": 23,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 395,
        "column": 41,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 395,
        "column": 41,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 398,
        "column": 49,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 398,
        "column": 49,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 398,
        "column": 67,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 398,
        "column": 67,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 399,
        "column": 9,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 399,
        "column": 9,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 399,
        "column": 24,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 399,
        "column": 24,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 400,
        "column": 47,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "testing-library/no-node-access",
        "severity": 1,
        "message": "Avoid direct Node access. Prefer using the methods from Testing Library.",
        "line": 400,
        "column": 47,
        "nodeType": "MemberExpression",
        "messageId": "noNodeAccess",
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/patterns/selectionDrawer/SelectionDrawerItem.tsx",
    "messages": [],
    "suppressedMessages": [
      {
        "ruleId": "react/prop-types",
        "severity": 2,
        "message": "'children' is missing in props validation",
        "line": 141,
        "column": 3,
        "nodeType": "Property",
        "messageId": "missingPropType",
        "endLine": 141,
        "endColumn": 11,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "react/prop-types",
        "severity": 2,
        "message": "'openable' is missing in props validation",
        "line": 159,
        "column": 9,
        "nodeType": "Property",
        "messageId": "missingPropType",
        "endLine": 159,
        "endColumn": 17,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "react/prop-types",
        "severity": 2,
        "message": "'setOpen' is missing in props validation",
        "line": 159,
        "column": 19,
        "nodeType": "Property",
        "messageId": "missingPropType",
        "endLine": 159,
        "endColumn": 26,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/patterns/selectionDrawer/SelectionDrawerProvider.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/util/htmlProps/button.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/util/htmlProps/dom.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/util/htmlProps/html.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/components/util/withWindowSize.tsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  },
  {
    "filePath": "/Users/stevma/Library/CloudStorage/OneDrive-WillisTowersWatson/mac-home-backup/MacsideProjects/es-components/packages/es-components/src/global.tsx",
    "messages": [
      {
        "ruleId": "@typescript-eslint/no-unused-vars",
        "severity": 1,
        "message": "'KeysMatching' is defined but never used.",
        "line": 6,
        "column": 6,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 6,
        "endColumn": 18
      }
    ],
    "suppressedMessages": [
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 1,
        "message": "Unexpected any. Specify a different type.",
        "line": 52,
        "column": 62,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 52,
        "endColumn": 65,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": { "range": [1649, 1652], "text": "unknown" },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": { "range": [1649, 1652], "text": "never" },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ],
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 1,
        "message": "Unexpected any. Specify a different type.",
        "line": 53,
        "column": 71,
        "nodeType": "TSAnyKeyword",
        "messageId": "unexpectedAny",
        "endLine": 53,
        "endColumn": 74,
        "suggestions": [
          {
            "messageId": "suggestUnknown",
            "fix": { "range": [1725, 1728], "text": "unknown" },
            "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
          },
          {
            "messageId": "suggestNever",
            "fix": { "range": [1725, 1728], "text": "never" },
            "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
          }
        ],
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-namespace",
        "severity": 2,
        "message": "ES2015 module syntax is preferred over namespaces.",
        "line": 73,
        "column": 3,
        "nodeType": "TSModuleDeclaration",
        "messageId": "moduleSyntaxIsPreferred",
        "endLine": 77,
        "endColumn": 4,
        "suppressions": [{ "kind": "directive", "justification": "" }]
      },
      {
        "ruleId": "@typescript-eslint/no-empty-interface",
        "severity": 2,
        "message": "An interface declaring no members is equivalent to its supertype.",
        "line": 82,
        "column": 20,
        "nodeType": "Identifier",
        "messageId": "noEmptyWithSuper",
        "endLine": 82,
        "endColumn": 32,
        "fix": { "range": [2410, 2451], "text": "type DefaultTheme = ESTheme" },
        "suppressions": [{ "kind": "directive", "justification": "" }]
      }
    ],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 1,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import type ESTheme from 'es-components-shared-types';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport type { DefaultTheme } from 'styled-components';\n\ntype KeysMatching<T, V> = {\n  [K in keyof T]-?: K extends keyof V ? (T[K] extends V[K] ? K : never) : never;\n}[keyof T];\n\ndeclare global {\n  type Maybe<T> = T | null | undefined;\n  type IsNullable<T, K> = null | undefined extends T ? K : never;\n  type IsNonNullable<T, K> = T extends null | undefined ? never : K;\n\n  type NullableKeys<T> = {\n    [K in keyof T]-?: IsNullable<T[K], K>;\n  }[keyof T];\n  type NonNullableKeys<T> = {\n    [K in keyof T]-?: IsNonNullable<T[K], K>;\n  }[keyof T];\n\n  type BooleanString = 'true' | 'false';\n\n  type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<\n    T,\n    Exclude<keyof T, Keys>\n  > & {\n    [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>;\n  };\n\n  type ReactFCWithChildren<T = unknown> = React.FC<React.PropsWithChildren<T>>;\n\n  type JSXElementProps<T extends keyof JSX.IntrinsicElements> =\n    T extends keyof JSX.IntrinsicElements\n      ? React.PropsWithoutRef<\n          'key' extends keyof JSX.IntrinsicElements[T]\n            ? Omit<JSX.IntrinsicElements[T], 'key'>\n            : JSX.IntrinsicElements[T]\n        >\n      : never;\n\n  type Theme = ESTheme;\n\n  type HTMLElementProps = React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLElement>,\n    HTMLElement\n  >;\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  type StyledComponentElementProps<T extends keyof JSX.IntrinsicElements> =\n    JSXElementProps<T> & {\n      as?: keyof JSX.IntrinsicElements | React.ComponentType<any>;\n      forwardedAs?: keyof JSX.IntrinsicElements | React.ComponentType<any>;\n    };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  interface OptionalThemeProps {\n    theme?: DefaultTheme;\n  }\n\n  type Without<T, U> = Omit<T, Extract<keyof T, keyof U>>;\n  type Override<T, U> = Omit<T, keyof U> & U;\n\n  type PropTypesOf<T> = {\n    [key in keyof T]-?:\n      | PropTypes.Requireable<T[key]>\n      | PropTypes.Validator<T[key]>;\n  };\n\n  const ASSETS_PATH: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      basicHTMLElement: HTMLElementProps;\n    }\n  }\n}\n\ndeclare module 'styled-components' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface DefaultTheme extends ESTheme {}\n}\n",
    "usedDeprecatedRules": [
      { "ruleId": "no-mixed-spaces-and-tabs", "replacedBy": [] }
    ]
  }
]
